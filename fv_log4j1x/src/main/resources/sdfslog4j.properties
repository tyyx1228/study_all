# 统一配置常量
app.root.logger=INFO, SPECIFIC_WARN_LOG
app.log.dir=fv_log4j1x/logs
app.log.size.file=roll-size-hello.log
app.log.daily.file=roll-day-hello.log
app.log.hour.file=roll-hour-hello.log
app.log.minute.file=roll-minute-hello.log

#定义日志输出格式
record.format1=%d{yyyy-MM-dd HH:mm:ss.SSS} %p %c: %m%n
record.format2=%d{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] %l: %m%n
record.format3=%d{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] (%C.%M:%L) %x - %m%n

#log4j.logger.com.tongyu.cases.HelloWorld = ERROR

# Define the root logger to the system property "app.root.logger".
log4j.rootLogger=${app.root.logger}

###################################################
####                Appenders定义                 #
##################################################
#最简输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=${record.format2}


# 定义appender时，再次指定输出级别，但级别要大于或等于log4j.rootLogger中指定的级别
# 若只需输出具体某单一级别的日志，如只输出INFO级别，warn，error,fatal都不输出，则有两种方式实现
#   1. 自定义Appender继承自具体log4j中的apender，本例中继承ConsoleAppender并重写一下方法，然后这里使用自定义的Appender
#       public boolean isAsSevereAsThreshold(Priority priority){return getThreshold().equals(priority);}
# 以下第一行的意义是在声明一个appender，在java代码中可以使用
log4j.logger.SPECIFIC_WARN_LOG=warn, SPECIFIC_WARN_LOG
log4j.appender.SPECIFIC_WARN_LOG=com.tongyu.log4j.ext.MyConsoleAppender
log4j.appender.SPECIFIC_WARN_LOG.target=System.err
log4j.appender.SPECIFIC_WARN_LOG.Threshold=warn
log4j.appender.SPECIFIC_WARN_LOG.layout=org.apache.log4j.PatternLayout
log4j.appender.SPECIFIC_WARN_LOG.layout.ConversionPattern=${record.format1}
log4j.appender.SPECIFIC_WARN_LOG.encoding=UTF-8
log4j.additivity.SPECIFIC_WARN_LOG=false


# 输出到文件按大小滚动，滚动前后：hello.log -> hello.log.1
# 当文件数量达到10个时文件不在增加。hello.log中的日志将在文件大小超过100MB时清理
log4j.appender.LOGFILE=org.apache.log4j.RollingFileAppender
log4j.appender.LOGFILE.MaxFileSize=100MB
log4j.appender.LOGFILE.MaxBackupIndex=10
log4j.appender.LOGFILE.File=${app.log.dir}/${app.log.file}
log4j.appender.LOGFILE.layout=org.apache.log4j.PatternLayout
log4j.appender.LOGFILE.layout.ConversionPattern=${record.format2}


#按天滚动，这里按天滚动取决于FileNamePattern中时间的最小单位，本例中时间最小单位是天
log4j.appender.DAILY=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.DAILY.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.DAILY.rollingPolicy.ActiveFileName=${app.log.dir}/${app.log.daily.file}
log4j.appender.DAILY.rollingPolicy.FileNamePattern=${app.log.dir}/${app.log.file}.%d{yyyy-MM-dd}
log4j.appender.DAILY.layout=org.apache.log4j.PatternLayout
log4j.appender.DAILY.layout.ConversionPattern=${record.format3}


#按小时滚动，这里按小时滚动取决于FileNamePattern中时间的最小单位，本例中时间最小单位是小时
log4j.appender.HOUR=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.HOUR.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.HOUR.rollingPolicy.ActiveFileName=${app.log.dir}/${app.log.hour.file}
log4j.appender.HOUR.rollingPolicy.FileNamePattern=${app.log.dir}/${app.log.file}.%d{yyyy-MM-dd.HH}
log4j.appender.HOUR.layout=org.apache.log4j.PatternLayout
log4j.appender.HOUR.layout.ConversionPattern=${record.format3}


#按分钟滚动，这里按分钟滚动取决于FileNamePattern中时间的最小单位，本例中时间最小单位是分钟
log4j.appender.MINUTE=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.MINUTE.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.MINUTE.rollingPolicy.ActiveFileName=${app.log.dir}/${app.log.minute.file}
log4j.appender.MINUTE.rollingPolicy.FileNamePattern=${app.log.dir}/${app.log.minute.file}.%d{yyyy-MM-dd.HH.mm}
log4j.appender.MINUTE.layout=org.apache.log4j.PatternLayout
log4j.appender.MINUTE.layout.ConversionPattern=${record.format1}



#log4j.logger.msg=info, msg
log4j.appender.msg=com.tongyu.log4j.ext.MyRollingFileAppender
log4j.appender.msg.layout=org.apache.log4j.PatternLayout
log4j.appender.msg.layout.ConversionPattern=${record.format1}
log4j.appender.msg.target=System.err
log4j.appender.msg.Threshold=info
log4j.appender.msg.append=true
log4j.appender.msg.encoding=UTF-8
log4j.appender.msg.MaxBackupIndex=100
log4j.appender.msg.MaxFileSize=1MB
log4j.appender.msg.File=${app.log.dir}/info.log
log4j.additivity.msg=false




